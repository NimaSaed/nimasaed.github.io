{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":""},{"location":"#nima-saed","title":"Nima Saed","text":""},{"location":"#application-security-architect-software-security-engineer-ethical-hacker-devsecops-engineer-cloud-security-engineer","title":"Application Security Architect | Software Security Engineer  Ethical Hacker | DevSecOps Engineer | Cloud Security Engineer","text":"<ul> <li>nima [at] nmsd [dot] xyz</li> <li>00 31 six one four 61 two zero 95</li> </ul>"},{"location":"#biography","title":"Biography","text":"<p>I am a seasoned security expert with 19 years of experience in IT, including 13 years specializing in software and cloud security. My expertise lies in securing critical systems, particularly in authentication, authorization, and cryptography. I excel at automating security processes and integrating them into modern software development lifecycles (SSDLC).</p> <p>Over my career, I\u2019ve collaborated across industries such as healthcare, education, manufacturing, and technology, addressing their unique privacy and security challenges. My approach centers on making security a seamless enabler for innovation by championing automation and simplicity.</p> <p>As a trainer and mentor, I am passionate about empowering teams to adopt secure development practices and strengthen their security postures. Whether through penetration testing, threat modeling, or building secure cloud infrastructures, my goal is to ensure businesses thrive in the digital age while staying secure.</p>"},{"location":"#about-me","title":"About Me","text":"<p>My journey into cybersecurity started during my teenage years, sparked by a fascination with hacking and defense mechanisms. Friendly \"Capture the Flag\" competitions with friends fueled my curiosity about how systems operate\u2014and how to secure them. This passion eventually became my career.</p> <p>To deepen my expertise, I pursued formal education in security technology and cryptography, learning to secure software and build robust systems. Along the way, I\u2019ve developed a knack for tackling complex challenges and finding innovative solutions, both professionally and personally.</p> <p>In my free time, I\u2019m an enthusiastic maker and tech tinkerer. I enjoy experimenting with electronics and microcontrollers, automating my home, and now, creating with 3D modeling and 3D printing. These hobbies give me a hands-on outlet for creativity and problem-solving, skills I bring to all aspects of my work.</p>"},{"location":"resume/","title":"Nima Saed","text":"<p>Application Security Architect | Software Security Engineer  Ethical Hacker | DevSecOps Engineer | Cloud Security Engineer</p> <ul> <li>nmsd.xyz</li> <li>LinkedIn</li> <li>nima@nmsd.xyz</li> <li>00 31 6 14 61 20 95</li> </ul>"},{"location":"resume/#biography","title":"Biography","text":"<p>I am a seasoned security expert with 19 years of experience in IT, including 13 years specializing in software and cloud security. My expertise lies in securing critical systems, particularly in authentication, authorization, and cryptography. I excel at automating security processes and integrating them into modern software development lifecycles (SSDLC).</p> <p>Over my career, I\u2019ve collaborated across industries such as healthcare, education, manufacturing, and technology, addressing their unique privacy and security challenges. My approach centers on making security a seamless enabler for innovation by championing automation and simplicity.</p> <p>As a trainer and mentor, I am passionate about empowering teams to adopt secure development practices and strengthen their security postures. Whether through penetration testing, threat modeling, or building secure cloud infrastructures, my goal is to ensure businesses thrive in the digital age while staying secure.</p>"},{"location":"resume/#about-me","title":"About Me","text":"<p>My journey into cybersecurity started during my teenage years, sparked by a fascination with hacking and defense mechanisms. Friendly \"Capture the Flag\" competitions with friends fueled my curiosity about how systems operate\u2014and how to secure them. This passion eventually became my career.</p> <p>To deepen my expertise, I pursued formal education in security technology and cryptography, learning to secure software and build robust systems. Along the way, I\u2019ve developed a knack for tackling complex challenges and finding innovative solutions, both professionally and personally.</p> <p>In my free time, I\u2019m an enthusiastic maker and tech tinkerer. I enjoy experimenting with electronics and microcontrollers, automating my home, and now, creating with 3D modeling and 3D printing. These hobbies give me a hands-on outlet for creativity and problem-solving, skills I bring to all aspects of my work.</p>"},{"location":"resume/#professional-experience","title":"Professional Experience","text":""},{"location":"resume/#anva-may-2024-present","title":"ANVA (May 2024 \u2013 Present)","text":"<p>Security Architect</p> <ul> <li>Designed and implemented secure architecture for a new SaaS product.</li> <li>Specialized in authentication and authorization, secure software development, and secure CI/CD environments.</li> <li>Key Achievement:<ul> <li>Developed a modern authorization engine to enhance data security for a SaaS product.</li> </ul> </li> </ul>"},{"location":"resume/#xebia-nov-2021-april-2024","title":"Xebia (Nov 2021 \u2013 April 2024)","text":"<p>Security Consultant</p> <p>Nima provided consultancy services in digital transformation and security processes across diverse industries.</p> <ul> <li>Automated security checks in CI/CD pipelines.</li> <li>Conducted AWS cloud security assessments and enhanced infrastructure security.</li> <li>Performed penetration tests, secure code reviews, and threat modeling for application designs.</li> <li>Delivered training on AWS security, application security, and DevSecOps practices.</li> </ul> <p>Key Focus: Making security an enabler through automation and simplicity, empowering clients to strengthen their security posture effectively.</p>"},{"location":"resume/#247tailorsteel-dec-2019-oct-2021","title":"247TailorSteel (Dec 2019 \u2013 Oct 2021)","text":"<p>Information Security Engineer</p> <ul> <li>Integrated API security scans into development pipelines.</li> <li>Designed a secure authentication and authorization platform for a customer portal.</li> <li>Implemented automated network vulnerability scans for OT security, identifying factory floor vulnerabilities.</li> </ul>"},{"location":"resume/#dassault-systemes-sep-2016-dec-2019","title":"Dassault Syst\u00e8mes (Sep 2016 \u2013 Dec 2019)","text":"<p>Software Security Engineer</p> <ul> <li>Conducted penetration tests on in-house software and services.</li> <li>Advocated for a shift-left approach in the SDLC, embedding security into design and testing phases.</li> <li>Key Achievement: Successfully identified critical vulnerabilities in SAML authentication before release.</li> </ul> <p></p>"},{"location":"resume/#multimedia-university-sep-2014-aug-2016","title":"Multimedia University (Sep 2014 \u2013 Aug 2016)","text":"<p>Research Assistant &amp; Tutor</p> <ul> <li>Research Focus: Conducted research in cryptography and searchable encryption, exploring innovative methods for enhancing security and privacy.</li> <li>Tutoring: Assisted undergraduate students in topics such as C++ programming, data structures in C++, and web technologies.</li> </ul> <p>Key Contributions:</p> <ul> <li>Desgined Public Key Encryption with keyword Search Scheme. link to PEKS Scheme</li> <li>Discovered a method to reuse singcryption schemes in PEKS.</li> </ul> <p></p>"},{"location":"resume/#previous-experience","title":"Previous Experience","text":"<p>Network Administrator (Jan 2003 \u2013 Jun 2009)</p> <ul> <li>Managed and optimized network performance, security, and overall infrastructure.</li> <li>Firewall &amp; Security Administration: Administered firewalls, conducted security monitoring, and implemented network systems security audits.</li> <li>LAN Expansion &amp; Design: Planned and executed the organization's LAN network expansion, including server upgrades and configuration of Microsoft Windows Server and network-based routers.</li> <li>Collaboration with Management: Worked with the management team to develop security policies and provide technical support for application systems.</li> <li>Systems Maintenance: Responsible for backup of file servers, ISA server administration, and general network management.</li> </ul>"},{"location":"resume/#education","title":"Education","text":"<ul> <li>2014: Bachelor of I.T. (Hons) in Security Technology, Multimedia University, Malaysia</li> <li>2016: Cryptography, Multimedia University, Malaysia</li> </ul>"},{"location":"resume/#awards","title":"Awards","text":"<ul> <li> <p>ECA MMU Chapter Award for Security Technology, EC-Council, Convocation 2014</p> <ul> <li>Issued by Faculty of Information Science and Technology and EC-Council, Multimedia University</li> </ul> </li> <li> <p>Five Dean Awards</p> <ul> <li>Issued by Faculty of Information Science and Technology, Multimedia University</li> </ul> </li> </ul>"},{"location":"resume/#publications","title":"Publications","text":"<p>Peer-Reviewed Articles</p> <ul> <li> <p>Video and Voice Transmission over LTE Networks</p> <ul> <li>Authors: N. Saed, T.H. Liew, K. Wee, S.Y. Ooi</li> <li>Published in: 2013 IEEE International Conference on Control System, Computing and Engineering</li> <li>Year: 2013</li> </ul> </li> <li> <p>Low Complexity in Exaggerated Earliest Deadline First Approach for Channel and QoS-aware Scheduler</p> <ul> <li>Authors: N. Saed, K. Wee, C. Siew-Chin, T.H. Liew, Y.Y. Wee</li> <li>Published in: J. Commun. 9(11), 884-890</li> <li>Year: 2014</li> </ul> </li> <li>A Performance Study of Downlink Scheduling Algorithms in Wireless Broadband Networks<ul> <li>Authors: K. Wee, Muhd. Hilmi B.A. H, Y.Y. Wee, N. Saed</li> <li>Published in: J. Commun. 9(1), 39-47</li> <li>Year: 2014</li> </ul> </li> </ul>"},{"location":"resume/#competences","title":"Competences","text":"<ul> <li>Secure Architecture &amp; Design</li> <li>Training and Mentoring</li> <li>Penetration Testing &amp; Social Engineering</li> <li>Threat Modeling</li> <li>Security Test Automation</li> <li>Secure Software Development</li> <li>Secure CI/CD Environments &amp; SSDLC</li> <li>Cloud Security</li> </ul>"},{"location":"resume/#languages","title":"Languages","text":"<ul> <li>English: Fluent</li> <li>Persian: Native</li> <li>Kurdish: Intermediate</li> <li>Chinese: Beginner</li> <li>Dutch: Beginner</li> </ul>"},{"location":"resume/#hobbies","title":"Hobbies","text":"<ul> <li>Linux Ricing</li> <li>Electronics and Microcontrollers</li> <li>Smart Home Automation</li> <li>3D Design and Printing</li> </ul>"},{"location":"blog/AWS-Profile-changer/","title":"AWS Profile Changer in Bash","text":"<p>If you are like me and need to deal with multiple AWS profiles simultaneously, you need to keep switching between profiles. Many plugins are available for bash or zsh, but I want to keep it simple and only run the code that I understand.</p> <p>You can add the below function to your bashrc to change the <code>AWS_PROFILE</code> environment variable on the fly. It will read the AWS config file and list all the available profiles; then, you can select the one you need.</p> <pre><code>function aws_profile() {\n\n    local aws_home=\"$HOME/.aws\"\n\n    local profiles=(`\\\n        cat ${aws_home}/config | \\\n        grep profile | \\\n        sed 's/\\[//g;s/\\]//g' | \\\n        cut -d \" \" -f 2`);\n\n    PS3=\"Select a profile: [none = 0] \"\n\n    select profile in ${profiles[@]}\n    do\n        selected=$profile;\n        break;\n    done\n\n    unset $PS3;\n    if [ ! -z \"${profile}\" ];\n    then\n        export AWS_PROFILE=\"${profile}\";\n        export AWS_REGION=$(cat ${aws_home}/config | sed -n \"/${profile}/,/\\[/p\" | grep region | cut -d '=' -f 2 | sed 's/ //g')\n        export AWS_ACCESS_KEY_ID=$(cat ${aws_home}/credentials | sed -n \"/${profile}/,/\\[/p\" | grep aws_access_key_id | cut -d '=' -f 2 | sed 's/ //g')\n        export AWS_SECRET_ACCESS_KEY=$(cat ${aws_home}/credentials | sed -n \"/${profile}/,/\\[/p\" | grep aws_secret_access_key | cut -d '=' -f 2 | sed 's/ //g')\n    fi\n\n}\n</code></pre> <p>TODO:</p> <ul> <li> List AWS Profiles</li> <li> Select and update AWS profile</li> <li> Add region changer</li> <li> Add ability to add a profile</li> <li> Add ability to remove a profile</li> </ul>"},{"location":"blog/Metasploit-Framework-console/","title":"Metasploit Framework console on Docker. (with workspace)","text":"<p>Sep 20, 2019</p> <p></p>"},{"location":"blog/Metasploit-Framework-console/#summary","title":"Summary","text":"<p>I am a security specialist. I love Linux and containers. I would not say I like Kali Linux and bloated software. I use Metasploit Framework on Docker with workspace. Although you can start using the MSF docker out of the box, you need a database for using the workspace. Here is how.</p>"},{"location":"blog/Metasploit-Framework-console/#containers-are-everywhere-in-my-life","title":"Containers are everywhere in my life","text":"<p>Over the past few years, I started to like Docker and containerization in general. Before that, I had some resistance against containerization. Compared to VM, I saw VMs more secure and isolated. But now I have a different opinion. Although some of the security concerns about containers are true, at least for now, the benefits of containers are more appealing to me now. I have started using Docker wherever I can in my job or even personal life. I use Docker to build my automated security testing platform at work, and I use them to integrate my security testing tools. I run my services such as OpenVPN and Plex on Docker at home. They are everywhere in my life.</p> <p>I would not say I like to use Kali Linux because of 1. I am not particularly eager to run VM all the time. 2. Kali Linux is bloated. 3. There are so many tools that I don\u2019t even use. Instead, I use Arch Linux as my daily driver with a minimum number of packages installed. I use the Blackarch strap on my Arch Linux to get security tools or build the tools on Docker. One of the tools that I use is Metasploit Framework, and thanks to the Rapid7 team, there is a docker for MSF, which is getting updates every day or even sometimes twice a day. Although you can start using the MSF docker out of the box, you need a database for using the workspace.</p>"},{"location":"blog/Metasploit-Framework-console/#msf-console-on-docker","title":"MSF Console on Docker","text":"<p>You need MSF and Postgres docker. You also need to set up a docker network. First, create a directory in your home directory for MSF files. You also need a directory to keep Postgres data. Let\u2019s keep it in the same place with MSF files.</p> <pre><code>mkdir $HOME/.msf4\nmkdir $HOME/.msf4/database\n</code></pre>"},{"location":"blog/Metasploit-Framework-console/#network","title":"Network","text":"<p>You need a docker network to assign a fixed IP to each container. Let\u2019s create a network with a subnet of 172.18.0.0/16, and we call it msf.</p> <pre><code>docker network create --subnet=172.18.0.0/16 msf\n</code></pre>"},{"location":"blog/Metasploit-Framework-console/#database","title":"Database","text":"<p>Now we need the database. Here we are going to use Postgres 11 with alpine based os. Let\u2019s assign it to network msf and give IP 172.18.0.2. You need to mount a volume to keep the data, and you also need to set the value to Postgres\u2019s username, password and database name.</p> <pre><code>docker run --ip 172.18.0.2 --network msf --rm --name postgres -v \"${HOME}/.msf4/database:/var/lib/postgresql/data\" -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=msf -d postgres:11-alpine\n</code></pre>"},{"location":"blog/Metasploit-Framework-console/#msf","title":"MSF","text":"<p>Now we can run MSF on Docker, but we need to set database URL (including username, password, and database name in URL) for the first time. You also need to mount the volume to save the data. Lastly, you need to map the range of ports that MSF will use.</p> <pre><code>docker run --rm -it --network msf --name msf --ip 172.18.0.3 -e DATABASE_URL='postgres://postgres:postgres@172.18.0.2:5432/msf' -v \"${HOME}/.msf4:/home/msf/.msf4\" -p 8443-8500:8443-8500 metasploitframework/metasploit-framework\n</code></pre>"},{"location":"blog/Metasploit-Framework-console/#save-database-setting","title":"Save database setting","text":"<p>You can save the database setting in MSF. To do so, inside the MSF console, execute db_save. Now you can run MSF docker without setting database URL.</p> <pre><code>docker run --rm -it -u 0 --network msf --name msf --ip 172.18.0.3 -v \"${HOME}/.msf4:/home/msf/.msf4\" -p 8443-8500:8443-8500 metasploitframework/metasploit-framework\n</code></pre>"},{"location":"blog/Metasploit-Framework-console/#msf-function-in-bashrc","title":"MSF function in .bashrc","text":"<p>If you are using Linux, you can also use the below function in your bashrc. First, it will check if the msf network exists; if not, it will create the network. Then it will check if Postgres docker is running; if not, it will start the Postgres docker. Lastly, it will start the MSF docker.</p> <pre><code>function msf-docker() {\n if [ -z \"$(docker network ls | grep -w msf)\" ];\n then\n docker network create --subnet=172.18.0.0/16 msf\n fi\n if [ -z \"$(docker ps -a | grep -w postgres)\" ];\n then\n docker run --ip 172.18.0.2 --network msf --rm --name postgres -v \"${HOME}/.msf4/database:/var/lib/postgresql/data\" -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=msf -d postgres:11-alpine\n fi\n docker run --rm -it -u 0 --network msf --name msf --ip 172.18.0.3 -v \"${HOME}/.msf4:/home/msf/.msf4\" -p 8443-8500:8443-8500 metasploitframework/metasploit-framework\n}\n</code></pre> <p>If you need help with any of these, drop me a message.</p>"},{"location":"blog/sudo-with-touch-id-on-Mac/","title":"Enabling Touch ID for <code>sudo</code> on macOS","text":"<p>Did you know that you can utilize your Mac's Touch ID feature to execute <code>sudo</code> commands without the need to enter your password? This convenient trick can save you time and streamline your workflow. Let's delve into the process of setting it up.</p> <p>To enable Touch ID for <code>sudo</code>, follow these steps:</p> <ol> <li> <p>Open the Terminal application on your Mac.</p> </li> <li> <p>Type the following command to open the <code>sudo</code> PAM configuration file using the <code>vim</code> text editor: <pre><code>sudo vim /etc/pam.d/sudo\n</code></pre></p> </li> <li>Add the following line at the top of the file: <pre><code>auth sufficient pam_tid.so\n</code></pre> This line enables Touch ID authentication for <code>sudo</code> commands.</li> <li>If you use TMUX, you'll need to attach the PAM (Pluggable Authentication Module) to TMUX to ensure that the Touch ID integration works within TMUX sessions. To do this, follow these additional steps:<ul> <li>Install <code>pam-reattach</code> using Homebrew by running the following command:  <pre><code>brew install pam-reattach\n</code></pre></li> <li>Open the <code>sudo</code> PAM configuration file again:  <pre><code>sudo vim /etc/pam.d/sudo\n</code></pre></li> <li>Add the following line below the previous line:  <pre><code>auth optional /opt/homebrew/lib/pam/pam_reattach.so\n</code></pre> These lines enable Touch ID support within TMUX sessions as well.</li> </ul> </li> <li>Save the changes to the file.</li> <li>You might need to reboot your Mac or restart any open Terminal or TMUX sessions for the changes to take effect.</li> </ol> <p>Here's a convenient script that automates these steps for you:</p> <pre><code>#!/usr/bin/env bash\nset -o nounset # Treat unset variables as an error\n\n# This script is going to add touch id to sudo command, including inside TMUX\n\necho \"NOTICE: you need to install pam-reattach to use it in TMUX\"\n\nsudo_path=\"/etc/pam.d/sudo\"\nchmod 644 $sudo_path\nsed -i -e '2s/^/auth\\t   sufficient\\t  pam_tid.so\\n/' $sudo_path\nsed -i -e '3s/^/auth\\t   optional\\t  \\/opt\\/homebrew\\/lib\\/pam\\/pam_reattach.so\\n/' $sudo_path\nchmod 444 $sudo_path\n</code></pre> <p>Just execute this script in your Terminal, and it will handle the necessary configurations for you.</p> <p>With Touch ID-enabled <code>sudo</code>, you can now perform administrative tasks more conveniently and securely. This feature not only eliminates the need to type your password but also enhances the overall accessibility of your Mac. Give it a try and experience the seamless power of Touch ID in your command-line activities!\"</p>"},{"location":"notes/authelia/","title":"Authelia Deployment with Rootless Podman and Traefik","text":"<p>This guide provides step-by-step instructions for deploying Authelia in a Podman pod with Traefik as the reverse proxy for authentication, including secure secret management and basic access control.</p> <ul> <li>Pod Creation: Creates a Podman pod named <code>auth</code> exposing port <code>9091</code> and attached to the <code>reverse_proxy</code> network.</li> <li>Secret Management: Uses <code>podman secret</code> to create and manage secrets for JWT, session, and storage encryption.</li> <li>Authelia Deployment: Runs Authelia in the pod with required secrets, environment variables, and Traefik labels for routing and forward authentication.</li> <li>Authentication Test: Deploys a <code>whoami</code> test container to validate the Authelia setup using Traefik middleware.</li> <li>Configuration: YAML configuration for access control (bypass, one-factor, two-factor) and session cookie policies.</li> <li>User Database: Defines users and groups using Argon2id hashed passwords for secure authentication.</li> </ul>"},{"location":"notes/authelia/#to-create-pod","title":"To create Pod","text":"<pre><code>podman pod \\\ncreate \\\n--name auth \\\n--publish 9091:9091/tcp \\\n--network reverse_proxy\n</code></pre>"},{"location":"notes/authelia/#to-create-secret","title":"To create secret","text":"<pre><code>printf 'myjwtsecret' | podman secret create authelia_jwt_secret -\nprintf 'mysessionsecret' | podman secret create authelia_session_secret -\nprintf 'mystorageenckey' | podman secret create authelia_storage_encryption_key -\n</code></pre>"},{"location":"notes/authelia/#to-replace-secret","title":"To replace secret","text":"<pre><code>printf \"new\" | podman secret create --replace secret_name -\n</code></pre>"},{"location":"notes/authelia/#to-create-container-in-a-pod","title":"To create Container in a Pod","text":"<pre><code>podman run \\\n--detach \\\n--label \"io.containers.autoupdate=registry\" \\\n--label \"traefik.enable=true\" \\\n--label traefik.http.routers.authelia.rule='host(`auth.example.com`)' \\\n--label \"traefik.http.routers.authelia.entrypoints=websecure\" \\\n--label \"traefik.http.routers.authelia.tls.certresolver=namecheap\" \\\n--label \"traefik.http.routers.authelia.service=authelia\" \\\n--label \"traefik.http.services.authelia.loadbalancer.server.scheme=http\" \\\n--label \"traefik.http.services.authelia.loadbalancer.server.port=9091\" \\\n--label \"traefik.http.middlewares.authelia.forwardauth.address=http://host.docker.internal:9091/api/authz/forward-auth\" \\\n--label \"traefik.http.middlewares.authelia.forwardauth.trustforwardheader=true\" \\\n--label \"traefik.http.middlewares.authelia.forwardauth.authresponseheaders=remote-user,remote-groups,remote-email,remote-name\" \\\n--name authelia \\\n--pod  auth \\\n--restart always \\\n--env tz=europe/amsterdam \\\n--env AUTHELIA_SERVER_ADDRESS='tcp://:9091' \\\n--env AUTHELIA_LOG_LEVEL=warn \\\n--env AUTHELIA_TOTP_ISSUER='auth.example.com' \\\n--env AUTHELIA_AUTHENTICATION_BACKEND_FILE_PATH='/config/users_database.yml' \\\n--env AUTHELIA_ACCESS_CONTROL_DEFAULT_POLICY='deny' \\\n--env AUTHELIA_REGULATION_MAX_RETRIES=3 \\\n--env AUTHELIA_REGULATION_FIND_TIME=\"2 minutes\" \\\n--env AUTHELIA_REGULATION_BAN_TIME=\"5 minutes\" \\\n--env AUTHELIA_STORAGE_LOCAL_PATH=\"/config/db.sqlite3\" \\\n--env AUTHELIA_NOTIFIER_FILESYSTEM_FILENAME=\"/config/notification.txt\" \\\n--secret authelia_jwt_secret,type=env,target=AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET \\\n--secret authelia_session_secret,type=env,target=AUTHELIA_SESSION_SECRET \\\n--secret authelia_storage_encryption_key,type=env,target=AUTHELIA_STORAGE_ENCRYPTION_KEY \\\n--volume $HOME/authelia:/config:z \\\nghcr.io/authelia/authelia:latest\n</code></pre>"},{"location":"notes/authelia/#to-test-the-authentication","title":"To test the authentication","text":"<pre><code>podman run \\\n--detach \\\n--label \"io.containers.autoupdate=registry\" \\\n--label \"traefik.enable=true\" \\\n--label traefik.http.routers.whoami.rule='Host(`whoami.example.com`)' \\\n--label \"traefik.http.routers.whoami.entrypoints=websecure\" \\\n--label \"traefik.http.routers.whoami.tls.certresolver=namecheap\" \\\n--label \"traefik.http.routers.whoami.service=whoami\" \\\n--label \"traefik.http.services.whoami.loadbalancer.server.scheme=http\" \\\n--label \"traefik.http.services.whoami.loadbalancer.server.port=80\" \\\n--label \"traefik.http.routers.whoami.middlewares=authelia@docker\" \\\n--network reverse_proxy \\\n--name whoami \\\ndocker.io/library/nginx\n</code></pre>"},{"location":"notes/authelia/#configuration-file","title":"Configuration file","text":"<pre><code>---\naccess_control:\n  rules:\n    - domain:\n      - 'public.example.com'\n      policy: 'bypass'\n    - domain:\n      - 'subdomain1.example.com'\n      - 'subdomain2.example.com'\n      policy: 'one_factor'\n    - domain:\n      - 'secure.example.com'\n      policy: 'two_factor'\n\nsession:\n  # session secret is in env\n  cookies:\n    - name: 'authelia_session'\n      domain: 'example.com'  # Should match whatever your root protected domain is\n      authelia_url: 'https://auth.example.com'\n      expiration: '1 hour'  # 1 hour\n      inactivity: '5 minutes'  # 5 minutes\n      default_redirection_url: 'https://home.example.com'\n...\n</code></pre>"},{"location":"notes/authelia/#users-database","title":"Users database","text":"<pre><code>users:\n    username:\n        password: $argon2id$...\n        displayname: user display name\n        email: user@example.com\n        groups:\n            - admins\n            - dev\n        given_name: \"\"\n        middle_name: \"\"\n        family_name: \"\"\n        nickname: \"\"\n        gender: \"\"\n        birthdate: \"\"\n        website: \"\"\n        profile: \"\"\n        picture: \"\"\n        zoneinfo: \"\"\n        locale: \"\"\n        phone_number: \"\"\n        phone_extension: \"\"\n        disabled: false\n        address: null\n        extra: {}\n</code></pre>"},{"location":"notes/bash-tips/","title":"Bash Tips","text":""},{"location":"notes/bash-tips/#printf","title":"Printf","text":"<pre><code>printf \"%s\\n\" print arguments on \"separate lines\"\n</code></pre> <pre><code>print\narguments\non\nseparate\nlines\n</code></pre> <pre><code>printf \"%b\\n\" \"Hello\\nWorld\" \"12\\twords\"\n</code></pre> <pre><code>Hello\nWorld\n12      words\n</code></pre> <pre><code>printf \"%d\\n\" 23 45 56.78 0xff 011\n</code></pre> <pre><code>23\n45\n-bash: printf: 56.78: invalid number\n56\n255\n9\n</code></pre> <p>Note</p> <p>Using a leading 0 is going to be octal. Using a lead 0x is going to be hexadecimal.</p> <pre><code>printf \"%f\\n\" 12.24 23 56.789 1.2345678\n</code></pre> <pre><code>12.240000\n23.000000\n56.789000\n1.234568\n</code></pre> <pre><code>printf \"%e\\n\" 12.34 23\n</code></pre> <pre><code>1.234000e+01\n2.300000e+01\n</code></pre>"},{"location":"notes/bash-tips/#width","title":"Width","text":"<p>Note</p> <p><code>-</code> here in output means space.</p> <pre><code>printf \"%8s %10s\\n\" nima saed\n</code></pre> <pre><code>----nima ------saed\n</code></pre> <pre><code>printf \"%8s %-10s\\n\" nima saed\n</code></pre> <pre><code>----nima saed------\n</code></pre> <pre><code>printf \"%8.2s %-10s\\n\" nima saed\n</code></pre> <pre><code>------ni saed------\n</code></pre> <pre><code>printf \"%4d\\n\" 23 54\n</code></pre> <pre><code>--23\n--54\n</code></pre> <pre><code>printf \"%04d\\n\" 23 54\n</code></pre> <pre><code>0023\n0054\n</code></pre> <pre><code>printf \"%10.4d\\n\" 23 54\n</code></pre> <pre><code>------0023\n------0054\n</code></pre> <pre><code>printf \"%10.4f\\n\" 23 54\n</code></pre> <pre><code>---23.0000\n---54.0000\n</code></pre>"},{"location":"notes/bash-tips/#read-command","title":"read command","text":"<pre><code>read a b \"test test1 test2\"\n\necho $a\necho $b\n</code></pre> <pre><code>test\ntest1 test2\n</code></pre>"},{"location":"notes/bash-tips/#while-loop","title":"while loop","text":"<pre><code>while\n    command lists\ndo\n    command lists\ndone\n</code></pre>"},{"location":"notes/bash-tips/#examples","title":"examples","text":"<pre><code>while\n    ((x&lt;10))\ndo\n    echo loop $x;\n    date &gt; date.$x;\n    ((x=x+1))\ndone\n</code></pre> <pre><code>while\n    read a b\ndo\n    echo a is $a b is $b\ndone &lt;data_file\n</code></pre> <pre><code>ls -l | while read a b c d; do echo owner is $c; done\n</code></pre>"},{"location":"notes/bash-tips/#for-loops","title":"For Loops","text":"<pre><code>for &lt;var&gt; in &lt;list&gt;\ndo\n    comand lists\ndone\n</code></pre>"},{"location":"notes/bash-tips/#examples_1","title":"Examples","text":"<pre><code>for i in dog cat elephant\ndo\n    echo i is $i\ndone\n</code></pre> <pre><code>for i in dog cat elephant; do echo i is $i; done\n</code></pre>"},{"location":"notes/bash-tips/#seq","title":"seq","text":"<pre><code>seq 1 5\n</code></pre> <pre><code>1\n2\n3\n4\n5\n</code></pre> <pre><code>for num in `seq 1 5`; do echo $num; done\n</code></pre> <pre><code>1\n2\n3\n4\n5\n</code></pre> <p>Note</p> <p>You can also use <code>{A..Z}</code>, <code>{a..f}</code> or <code>{1..10}</code> in for loops.</p> <pre><code>for i in {a..f}; do echo $i; done\n</code></pre> <pre><code>a\nb\nc\nd\ne\nf\n</code></pre>"},{"location":"notes/bash-tips/#dealing-with-files","title":"Dealing with files","text":"<pre><code>for d in $(&lt;data_file); do echo $d; done\n</code></pre> <pre><code>for j in *.c\n# making a list with file globbing\ndo\n    command\ndone\n</code></pre> <pre><code>for f in $(find . -name *.c)\ndo\n command\ndone\n</code></pre>"},{"location":"notes/bash-tips/#listarray","title":"List/Array","text":"<pre><code>for n in ${list[@]}; do echo $n; done\n</code></pre>"},{"location":"notes/bash-tips/#functions","title":"Functions","text":"<pre><code>function name{\n    command list\n}\n</code></pre> <pre><code>function myfunc {\n    echo starting\n    return\n    echo this will not be executed\n}\n</code></pre>"},{"location":"notes/bash-tips/#export-functions","title":"Export functions","text":"<pre><code>export -f myfunc\n</code></pre>"},{"location":"notes/bash-tips/#case-statement","title":"Case Statement","text":"<pre><code>case expression in\npattern 1 )\n    command list ;;\npattern 2 )\n    command list ;;\nesac\n</code></pre> <pre><code>case $ans in\nyes|YES|y|Y|y.x) echo \"Will do!\";;\nn*|N*) echo \"Will NOT do!\";;\n*) echo \"Oops!\";;\nesac\n</code></pre>"},{"location":"notes/bash-tips/#if-then-else-statement","title":"If-Then-Else Statement","text":"<pre><code>if\n    command list # last result is used\n    then\n    command list\n    [else\n    command list]\nfi\n</code></pre>"},{"location":"notes/bash-tips/#example","title":"Example","text":"<pre><code>if\ngrep -q important myfile\nthen\n    echo myfile has important stuff\nelse\n    echo myfile does not have important stuff\nfi\n</code></pre>"},{"location":"notes/bash-tips/#extra","title":"Extra","text":""},{"location":"notes/bash-tips/#file-name-and-path","title":"File name and path","text":"<p>Note</p> <p>This code is inside the script file.</p>"},{"location":"notes/bash-tips/#to-get-name-of-script-file","title":"To get name of script file","text":"<pre><code>echo $0\n</code></pre>"},{"location":"notes/bash-tips/#to-get-full-path-of-the-file","title":"To get full path of the file","text":"<pre><code>echo $(readlink -f $0)\n</code></pre>"},{"location":"notes/bash-tips/#to-get-full-path-but-move-one-directory-up","title":"To get full path but move one directory up","text":"<pre><code>echo $(dirname \"$(readlink -f $0)\")\n</code></pre>"},{"location":"notes/bash-tips/#progress-bar","title":"Progress bar","text":"<pre><code>echo -ne '#####                     (33%)\\r'\nsleep 1\necho -ne '#############             (66%)\\r'\nsleep 1\necho -ne '#######################   (100%)\\r'\necho -ne '\\n'\n</code></pre>"},{"location":"notes/bash-tips/#bash-parsing-and-expansion","title":"Bash parsing and expansion","text":"<ol> <li>Brace expansion</li> </ol> <pre><code>{one,two,three}\n{1..10} or {a..z}\npre{d,l}ate\n{{1..3},{a..c}} =&gt; 1,2,3,a,b,c\n{1..3}{a..c} =&gt; 1a,1b,1c,2a,...,3c\n{01..13..3} =&gt; 01,04,07,10,13\n{a..h..3} =&gt; a,d,g\n</code></pre> <ol> <li>Tilde expansion</li> </ol> <pre><code>~ =&gt; /home/nima\n~someone =&gt; /home/someone\n~noUser =&gt; ~noUser\n</code></pre> <ol> <li>Parameter and variable expansion</li> </ol> <pre><code>var=whatever\n$var or ${var} =&gt; whatever\necho $var \u201c$var\u201d #are having different result  if there are white spaces\n</code></pre> <ol> <li>Arithmetic expansion</li> </ol> <pre><code>$(( expression ))\n</code></pre> <ol> <li>Command substitution</li> </ol> <pre><code>wc -l $( date +%Y-%m-%d).log\n</code></pre> <p>Note</p> <p>If command substitution is not quoted, word splitting and pathname expansion are performed on the result.</p> <ol> <li>Word splitting</li> </ol> <p>The result of parameter and arithmetic expansion, as well as command substitution, are subject to word splitting if the were NOT QUETED</p> <pre><code>var=\"this is a multi-word value\"\nprintf \":%s:\\n\" $var\n</code></pre> <pre><code>:this:\n:is:\n:a:\n:multi-word:\n:value:\n</code></pre> <pre><code>var=\"this is a multi-word value\"\nprintf \":%s:\\n\" $var\n</code></pre> <pre><code>:this is a multi-word value:\n</code></pre> <p>Note</p> <p>Word splitting is based on value of IFS (Internal Field Separator). IFS default value is space, tab, and newline. (IFS=$' \\t\\n'). You can change IFS value to any value.</p> <ol> <li>Pathname expansion</li> </ol> <p>Char in use are *, ?, and []</p> <pre><code>echo D*\n</code></pre> <p>list files starting with capital D.</p> <pre><code>echo ?a*\n</code></pre> <p>list files which the second char is a.</p> <pre><code>echo *[0-9]*\n</code></pre> <p>list files which there is at least one number in there name.</p> <ol> <li>Process substitution</li> </ol> <pre><code>&lt;(command)\n&gt;(command)\n</code></pre>"},{"location":"notes/bash-tips/#parameter-expansion","title":"Parameter Expansion","text":"<p>empty or unset variable</p> <ol> <li> <p>Default</p> <ul> <li>echo {var:-default} =&gt; default if it is not set and empty string</li> <li>echo {var-default}  =&gt; default if it is not set</li> </ul> </li> <li> <p>Alternative</p> <ul> <li>echo {var:+alter}   =&gt; alter if it is set and not empty string</li> <li>echo {var+alter}    =&gt; alter if it is set</li> </ul> </li> <li> <p>Default with assignment</p> <ul> <li>echo {var:=default} =&gt; default if it is not set and empty string, assign default to var as well</li> <li>echo {var=default}  =&gt; default if it is not set, assign default to var as well.</li> </ul> </li> <li> <p>Message</p> <ul> <li>echo {var:?message} =&gt; display error message if it is not set and empty string</li> <li>echo {var?message}  =&gt; display error message if it is not set</li> </ul> </li> </ol> <p>** Length of var</p> <pre><code>var=test\necho ${#var}\n</code></pre> <pre><code>4\n</code></pre> <p>Remove Pattern</p> <ul> <li>Short from end</li> </ul> <p><pre><code>var=Toronto\necho ${var%o*}\n</code></pre> <pre><code>Toront\n</code></pre></p> <ul> <li>Long from end</li> </ul> <pre><code>var=Toronto\necho ${var%%o*}\n</code></pre> <pre><code>T\n</code></pre> <ul> <li>Short from beginning</li> </ul> <pre><code>var=Toronto\necho ${var#*o}\n</code></pre> <pre><code>ronto\n</code></pre> <ul> <li>Long from beginning</li> </ul> <pre><code>scriptname=${0##*/} ## /home/user/script.sh =&gt; script.sh\n</code></pre> <p>Replace pattern</p> <pre><code>password=reretrgfdsgdhdt\necho \"${password//?/*}\"\n</code></pre> <pre><code>*************\n</code></pre> <p>Substring var:offset:length</p> <pre><code>var=Toronto\necho \"${var:3:2}\"\n</code></pre> <pre><code>on\n</code></pre> <pre><code>var=Toronto\necho \"${var:1}\"\n</code></pre> <pre><code>oronto\n</code></pre> <p>Negative offset</p> <pre><code>var=Toronto\necho \"${var: -3}\" # Do not forget about space betwen : and -\n</code></pre> <pre><code>nto\n</code></pre>"},{"location":"notes/homepage/","title":"Deploy homepage using rootless podman","text":"<pre><code>podman run \\\n--detach \\\n--label \"io.containers.autoupdate=registry\" \\\n--label \"traefik.enable=true\" \\\n--label traefik.http.routers.homepage.rule='Host(`home.example.com`)' \\\n--label \"traefik.http.routers.homepage.entrypoints=websecure\" \\\n--label \"traefik.http.routers.homepage.tls.certresolver=namecheap\" \\\n--label \"traefik.http.routers.homepage.service=homepage\" \\\n--label \"traefik.http.services.homepage.loadbalancer.server.scheme=http\" \\\n--label \"traefik.http.services.homepage.loadbalancer.server.port=3000\" \\\n--label \"traefik.http.routers.homepage.middlewares=authelia@docker\" \\\n--name homepage \\\n--pod  tools \\\n--env HOMEPAGE_ALLOWED_HOSTS=home.example.com \\\n--volume $HOME/homepage:/app/config:z \\\nghcr.io/gethomepage/homepage:latest\n</code></pre>"},{"location":"notes/nix/","title":"Nix on MacOS","text":"<p>How to install nix, use nix-darwin and flakes.</p>"},{"location":"notes/nix/#install-nix","title":"Install nix","text":"<p><pre><code>sh &lt;(curl --proto '=https' --tlsv1.2 -L https://nixos.org/nix/install)\n</code></pre> https://nixos.org/download/</p>"},{"location":"notes/nix/#initialize-flake-for-nix-darwin","title":"Initialize flake for nix-darwin","text":"<pre><code>nix flake init -t nix-darwin --extra-experimental-features \"nix-command flakes\"\n</code></pre>"},{"location":"notes/nix/#run-and-build-using-nix-darwin","title":"Run and build using nix-darwin","text":"<pre><code>sudo nix run nix-darwin --extra-experimental-features \"nix-command flakes\" -- switch --flake .config/nix#mac\n</code></pre>"},{"location":"notes/nix/#rebuild","title":"rebuild","text":"<pre><code>sudo darwin-rebuild switch --flake ~/.config/nix#mac\n</code></pre>"},{"location":"notes/nix/#nix-darwin-flake","title":"nix-darwin flake","text":"<p>https://raw.githubusercontent.com/NimaSaed/dotfiles/refs/heads/master/nix/flake.nix</p> <pre><code>{\n  description = \"Mac nix-darwin system flake\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixpkgs-unstable\";\n    nix-darwin.url = \"github:nix-darwin/nix-darwin/master\";\n    nix-darwin.inputs.nixpkgs.follows = \"nixpkgs\";\n    mac-app-util.url = \"github:hraban/mac-app-util\";\n    nix-homebrew.url = \"github:zhaofengli/nix-homebrew\";\n  };\n\n  outputs = inputs@{ self, nix-darwin, nixpkgs, mac-app-util, nix-homebrew }:\n  let\n    configuration = { pkgs, config, ... }: {\n\n      nixpkgs.config.allowUnfree = true;\n\n      # List packages installed in system profile. To search by name, run:\n      # $ nix-env -qaP | grep wget\n      environment.systemPackages =\n        [\n          pkgs.bash\n          pkgs.git\n          pkgs.jq\n          pkgs.tmux\n          pkgs.bat\n          pkgs.fzf\n          pkgs.gnused\n          pkgs.vim\n          pkgs.alacritty\n          pkgs.aerospace\n          pkgs.brave\n          pkgs.logseq\n          #pkgs.teams\n          pkgs.monitorcontrol\n          pkgs.openscad\n          pkgs.slack\n          pkgs.podman\n          pkgs.openfga\n          pkgs.openfga-cli\n          pkgs.mkalias\n        ];\n\n      fonts.packages = [\n        pkgs.nerd-fonts.jetbrains-mono\n      ];\n\n      homebrew = {\n        enable = true;\n        brews = [\n          \"mas\"\n          \"coreutils\"\n        ];\n        casks = [\n          \"1password\"\n          \"1password-cli\"\n          \"basictex\"\n          \"burp-suite-professional\"\n          \"grammarly-desktop\"\n          \"parallels\"\n          \"font-jetbrains-mono\"\n          \"bambu-studio\"\n          \"qflipper\"\n          \"microsoft-teams\"\n        ];\n        masApps = {\n          \"ikea desk remote\" = 1509037746;\n          \"1password for safari\" = 1569813296;\n        };\n        onActivation.cleanup = \"zap\";\n        onActivation.autoUpdate = true;\n        onActivation.upgrade = true;\n      };\n\n      system.defaults = {\n        dock.autohide = true;\n        dock.orientation = \"left\";\n        dock.autohide-delay = 1000.0;\n        dock.show-recents = false;\n        dock.tilesize = 24;\n        dock.expose-group-apps = true;\n        dock.persistent-apps = [\n          \"${pkgs.alacritty}/Applications/Alacritty.app\"\n          \"/Applications/Safari.app\"\n          \"${pkgs.slack}/Applications/Slack.app\"\n          \"${pkgs.teams}/Applications/Teams.app\"\n        ];\n        finder.FXPreferredViewStyle = \"clmv\";\n        NSGlobalDomain.AppleICUForce24HourTime = true;\n        NSGlobalDomain.AppleInterfaceStyle = \"Dark\";\n\n        loginwindow.GuestEnabled = false;\n      };\n\n      security.pam.services.sudo_local.touchIdAuth = true;\n      security.pam.services.sudo_local.reattach = true;\n      security.pam.services.sudo_local.watchIdAuth = true;\n\n      #system.autoupgrade.enable = true;\n      #system.autoUpgrade.enable = true;\n      #system.autoupgrade.dates = \"weekly\";\n\n      nix.gc.automatic = true;\n      nix.gc.interval = [\n        {\n          Hour = 3;\n          Minute = 15;\n          Weekday = 7;\n        }\n      ];\n      nix.gc.options = \"--delete-older-than 10d\";\n      nix.optimise.automatic = true;\n\n\n      # Necessary for using flakes on this system.\n      nix.settings.experimental-features = \"nix-command flakes\";\n\n      # Enable alternative shell support in nix-darwin.\n      # programs.fish.enable = true;\n      programs.bash.enable = true;\n\n      # Set Git commit hash for darwin-version.\n      system.configurationRevision = self.rev or self.dirtyRev or null;\n\n      # Used for backwards compatibility, please read the changelog before changing.\n      # $ darwin-rebuild changelog\n      system.stateVersion = 6;\n\n      system.primaryUser = \"nima\";\n\n      # The platform the configuration will be used on.\n      nixpkgs.hostPlatform = \"aarch64-darwin\";\n    };\n  in\n  {\n    # Build darwin flake using:\n    # $ darwin-rebuild build --flake .#simple\n    darwinConfigurations.\"mac\" = nix-darwin.lib.darwinSystem {\n      modules = [\n        configuration\n        mac-app-util.darwinModules.default\n        nix-homebrew.darwinModules.nix-homebrew\n        {\n          nix-homebrew = {\n            enable = true;\n            # apple silicon only\n            enableRosetta = true;\n            # User owning the homebrew prefix\n            user = \"nima\";\n            autoMigrate = true;\n          };\n        }\n      ];\n    };\n  };\n}\n</code></pre>"},{"location":"notes/podman-systemd/","title":"Creating a systemd Service for a Podman Pod","text":"<p>To create a <code>systemd</code> service file for managing a Podman pod:</p> <ul> <li> <p>Generate the systemd unit file:</p> <p>Use <code>podman generate systemd</code> with the <code>--new</code> flag to avoid generating a service for a currently running container. This ensures a create a new container out of the image: <pre><code>podman generate systemd --new --files --name &lt;podName&gt;\n</code></pre></p> <p>Warning</p> <p>If you use the same name for both the pod and a container, only the container\u2019s service will be generated. Make sure the pod and container names are unique if you want a pod-level service.</p> <p>Note</p> <p>by default <code>restart-policy</code> is <code>on-failure</code> which means the pod will be restarted if a container fails to start. You can change the value to <code>always</code> to make the pod always restart. <pre><code>podman generate systemd --new --files --name &lt;podName&gt; --restart-policy always\n</code></pre></p> </li> <li> <p>Move the generated service files to the user systemd directory</p> <p>Move the <code>.service</code> file(s) to the appropriate location in your user\u2019s systemd configuration directory:</p> <pre><code>mv generate_files ~/.config/systemd/user/\n</code></pre> </li> <li> <p>Reload the systemd user daemon:</p> <p>Inform systemd about the new unit file:</p> <pre><code>systemctl --user daemon-reload\n</code></pre> </li> <li> <p>Enable and start the service:</p> <p>Use <code>--now</code> to both enable the service at boot and start it immediately: <pre><code>systemctl --user enable --now pod-&lt;podName&gt;.service\n</code></pre></p> </li> </ul>"},{"location":"notes/traefik/","title":"Reverse Proxy (Traefik)","text":""},{"location":"notes/traefik/#to-enable-rootless-podman-socket","title":"To Enable Rootless Podman Socket","text":"<pre><code>systemctl --user enable --now podman.socket\n</code></pre>"},{"location":"notes/traefik/#to-create-a-network","title":"To Create a Network","text":"<pre><code>podman network \\\ncreate \\\nreverse_proxy\n</code></pre>"},{"location":"notes/traefik/#to-create-a-pod","title":"To Create a Pod","text":"<pre><code>podman pod \\\ncreate \\\n--name reverse_proxy \\\n--network reverse_proxy \\\n--publish 80:80/tcp \\\n--publish 443:443/tcp \\\n--publish 8080:8080/tcp \\\n--dns \"1.1.1.1\"\n</code></pre>"},{"location":"notes/traefik/#to-create-a-traefik-container","title":"To Create a Traefik Container","text":"<pre><code>podman run \\\n--detach \\\n--label \"io.containers.autoupdate=registry\" \\\n--name traefik \\\n--pod reverse_proxy \\\n--security-opt label=type:container_runtime_t \\\n--volume /run/user/`id -u`/podman/podman.sock:/var/run/docker.sock:ro,Z \\\n--volume $HOME/traefik/acme.json:/acme.json:Z \\\n--volume $HOME/traefik/home.yml:/home.yml:ro,Z \\\n--restart always \\\n--env \"TRAEFIK_LOG_LEVEL=DEBUG\" \\\n--env \"TRAEFIK_PROVIDERS_DOCKER=true\" \\\n--env \"TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false\" \\\n--env \"TRAEFIK_API_INSECURE=true\" \\\n--env \"TRAEFIK_API=true\" \\\n--env \"TRAEFIK_API_DASHBOARD=true\" \\\n--env \"TRAEFIK_ENTRYPOINTS_WEB_ADDRESS=:80\" \\\n--env \"TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS=:443\" \\\n--env \"TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_TO=websecure\" \\\n--env \"TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_SCHEME=https\" \\\n--env \"TRAEFIK_CERTIFICATESRESOLVERS_NAMECHEAP_ACME_DNSCHALLENGE=true\" \\\n--env \"TRAEFIK_CERTIFICATESRESOLVERS_NAMECHEAP_ACME_DNSCHALLENGE_PROVIDER=namecheap\" \\\n--env \"TRAEFIK_CERTIFICATESRESOLVERS_NAMECHEAP_ACME_DNSCHALLENGE_RESOLVERS=1.1.1.1:53\" \\\n--env \"TRAEFIK_CERTIFICATESRESOLVERS_NAMECHEAP_ACME_STORAGE=/acme.json\" \\\n--env \"TRAEFIK_PROVIDERS_FILE_FILENAME=/home.yml\" \\\n--env \"TRAEFIK_PROVIDERS_FILE_WATCH=true\" \\\n--env \"TRAEFIK_SERVERSTRANSPORT_INSECURESKIPVERIFY=true\" \\\n--secret namecheap_email,type=env,target=TRAEFIK_CERTIFICATESRESOLVERS_NAME_ACME_EMAIL \\\n--secret namecheap_api_user,type=env,target=NAMECHEAP_API_USER \\\n--secret namecheap_api_key,type=env,target=NAMECHEAP_API_KEY \\\ndocker.io/library/traefik\n</code></pre>"},{"location":"notes/traefik/#to-create-a-nginx-container-for-testing","title":"To Create a Nginx Container for Testing","text":"<pre><code>podman run \\\n--detach \\\n--label \"traefik.enable=true\" \\\n--label traefik.http.routers.whoami.rule='Host(`nginx.example.com`)' \\\n--label \"traefik.http.routers.whoami.entrypoints=websecure\" \\\n--label \"traefik.http.routers.whoami.tls.certresolver=namecheap\" \\\n--network reverse_proxy \\\n--name whoami \\\ndocker.io/library/nginx\n</code></pre>"},{"location":"notes/traefik/#the-configuration-file","title":"The configuration file","text":"<pre><code>http:\n  routers:\n    home:\n      rule: \"Host(`server.example.com`)\"\n      service: cockpit-service\n      entryPoints:\n        - websecure\n      tls:\n        certResolver: namecheap\n    traefik:\n      rule: \"Host(`traefik.example.com`)\"\n      service: traefik-service\n      entryPoints:\n        - websecure\n      tls:\n        certResolver: namecheap\n  services:\n    cockpit-service:\n      loadBalancer:\n        servers:\n          - url: \"https://host.docker.internal:9090\"\n    traefik-service:\n      loadBalancer:\n        servers:\n          - url: \"http://host.docker.internal:8080\"\n</code></pre>"},{"location":"resume/education/","title":"Education","text":"<ul> <li>2014: Security Technology, Multimedia University, Malaysia</li> <li>2016: Cryptography, Multimedia University, Malaysia</li> </ul>"},{"location":"resume/education/#awards","title":"Awards","text":"<ul> <li> <p>ECA MMU Chapter Award for Security Technology, EC-Council, Convocation 2014</p> <ul> <li>Issued by Faculty of Information Science and Technology and EC-Council, Multimedia University</li> </ul> </li> <li> <p>Five Dean Awards</p> <ul> <li>Issued by Faculty of Information Science and Technology, Multimedia University</li> </ul> </li> </ul>"},{"location":"resume/education/#publications","title":"Publications","text":"<p>Peer-Reviewed Articles</p> <ul> <li> <p>Video and Voice Transmission over LTE Networks</p> <ul> <li>Authors: N. Saed, T.H. Liew, K. Wee, S.Y. Ooi</li> <li>Published in: 2013 IEEE International Conference on Control System, Computing and Engineering</li> <li>Year: 2013</li> </ul> </li> <li> <p>Low Complexity in Exaggerated Earliest Deadline First Approach for Channel and QoS-aware Scheduler</p> <ul> <li>Authors: N. Saed, K. Wee, C. Siew-Chin, T.H. Liew, Y.Y. Wee</li> <li>Published in: J. Commun. 9(11), 884-890</li> <li>Year: 2014</li> </ul> </li> <li>A Performance Study of Downlink Scheduling Algorithms in Wireless Broadband Networks<ul> <li>Authors: K. Wee, Muhd. Hilmi B.A. H, Y.Y. Wee, N. Saed</li> <li>Published in: J. Commun. 9(1), 39-47</li> <li>Year: 2014</li> </ul> </li> </ul>"},{"location":"resume/other/","title":"Others","text":""},{"location":"resume/other/#competences","title":"Competences","text":"<ul> <li>Secure Architecture &amp; Design</li> <li>Training and Mentoring</li> <li>Penetration Testing &amp; Social Engineering</li> <li>Threat Modeling</li> <li>Security Test Automation</li> <li>Secure Software Development</li> <li>Secure CI/CD Environments &amp; SSDLC</li> <li>Cloud Security</li> </ul>"},{"location":"resume/other/#languages","title":"Languages","text":"<ul> <li>English: Fluent</li> <li>Persian: Native</li> <li>Kurdish: Intermediate</li> <li>Chinese: Beginner</li> <li>Dutch: Beginner</li> </ul>"},{"location":"resume/other/#hobbies","title":"Hobbies","text":"<ul> <li>Linux Ricing</li> <li>Electronics and Microcontrollers</li> <li>Smart Home Automation</li> <li>3D Design and Printing</li> </ul>"},{"location":"resume/professional_experience/","title":"Professional Experience","text":""},{"location":"resume/professional_experience/#anva-may-2024-present","title":"ANVA (May 2024 \u2013 Present)","text":""},{"location":"resume/professional_experience/#security-architect","title":"Security Architect","text":"<ul> <li>Designed and implemented secure architecture for a new SaaS product.</li> <li>Specialized in authentication and authorization, secure software development, and secure CI/CD environments.</li> <li>Key Achievement:<ul> <li>Developed a modern authorization engine to enhance data security for a SaaS product.</li> </ul> </li> </ul>"},{"location":"resume/professional_experience/#xebia-nov-2021-april-2024","title":"Xebia (Nov 2021 \u2013 April 2024)","text":""},{"location":"resume/professional_experience/#security-consultant","title":"Security Consultant","text":"<p>Nima provided consultancy services in digital transformation and security processes across diverse industries.</p> <ul> <li>Automated security checks in CI/CD pipelines.</li> <li>Conducted AWS cloud security assessments and enhanced infrastructure security.</li> <li>Performed penetration tests, secure code reviews, and threat modeling for application designs.</li> <li>Delivered training on AWS security, application security, and DevSecOps practices.</li> </ul> <p>Key Focus: Making security an enabler through automation and simplicity, empowering clients to strengthen their security posture effectively.</p>"},{"location":"resume/professional_experience/#247tailorsteel-dec-2019-oct-2021","title":"247TailorSteel (Dec 2019 \u2013 Oct 2021)","text":""},{"location":"resume/professional_experience/#information-security-engineer","title":"Information Security Engineer","text":"<ul> <li>Integrated API security scans into development pipelines.</li> <li>Designed a secure authentication and authorization platform for a customer portal.</li> <li>Implemented automated network vulnerability scans for OT security, identifying factory floor vulnerabilities.</li> </ul>"},{"location":"resume/professional_experience/#dassault-systemes-sep-2016-dec-2019","title":"Dassault Syst\u00e8mes (Sep 2016 \u2013 Dec 2019)","text":""},{"location":"resume/professional_experience/#software-security-engineer","title":"Software Security Engineer","text":"<ul> <li>Conducted penetration tests on in-house software and services.</li> <li>Advocated for a shift-left approach in the SDLC, embedding security into design and testing phases.</li> <li>Key Achievement: Successfully identified critical vulnerabilities in SAML authentication before release.</li> </ul>"},{"location":"resume/professional_experience/#multimedia-university-sep-2014-aug-2016","title":"Multimedia University (Sep 2014 \u2013 Aug 2016)","text":""},{"location":"resume/professional_experience/#research-assistant-tutor","title":"Research Assistant &amp; Tutor","text":"<ul> <li>Research Focus: Conducted research in cryptography and searchable encryption, exploring innovative methods for enhancing security and privacy.</li> <li>Tutoring: Assisted undergraduate students in topics such as C++ programming, data structures in C++, and web technologies.</li> </ul> <p>Key Contributions:</p> <ul> <li>Desgined Public Key Encryption with keyword Search Scheme. link to PEKS Scheme</li> <li>Discovered a method to reuse singcryption schemes in PEKS.</li> </ul> <p></p>"},{"location":"resume/professional_experience/#previous-experience","title":"Previous Experience","text":""},{"location":"resume/professional_experience/#network-administrator-jan-2003-jun-2009","title":"Network Administrator (Jan 2003 \u2013 Jun 2009)","text":"<ul> <li>Managed and optimized network performance, security, and overall infrastructure.</li> <li>Firewall &amp; Security Administration: Administered firewalls, conducted security monitoring, and implemented network systems security audits.</li> <li>LAN Expansion &amp; Design: Planned and executed the organization's LAN network expansion, including server upgrades and configuration of Microsoft Windows Server and network-based routers.</li> <li>Collaboration with Management: Worked with the management team to develop security policies and provide technical support for application systems.</li> <li>Systems Maintenance: Responsible for backup of file servers, ISA server administration, and general network management.</li> </ul>"},{"location":"talks/authorization_engine/","title":"Authorization Engine","text":"<p>This talk was presented at the Xebia Knowledge Exchange for Xebia's consultants on November 26, 2024.</p> <p>https://xke.xebia.com/events/Yhc5k2atadyRw1q5WG1C/6eMXPFUnyxFccbMQdIJm/modernizing-access-control-authorization-engines</p>"},{"location":"talks/authorization_engine/#from-pet-to-cattle-modernizing-access-control-with-open-source-authorization-engines","title":"From Pet to Cattle: Modernizing Access Control with Open Source Authorization Engines","text":""},{"location":"talks/authorization_engine/#introduction","title":"Introduction","text":"<p>In today's dynamic systems, managing authorization poses a complex challenge. This presentation will explore the CIE triangle and the DIE model to enhance our understanding of modern data management. We will discuss why data often behaves like a \"pet\" instead of \"cattle,\" highlighting the implications for effective access control.</p> <p>The session will introduce the concept of an authorization engine, highlighting its role in securing systems at scale, as well as reviewing some of the leading open-source solutions available today. We will also focus on OpenFGA, showcasing its potential to transform authorization workflows and align access control with modern development practices. Whether you are an engineer, architect, or security enthusiast, this talk will provide you with valuable insights and tools to modernize your authorization strategies</p> <p>Excalidraw file</p> <p>Excalidraw read-only link</p>"},{"location":"talks/authorization_engine/#openfga-demo","title":"OpenFGA demo","text":""},{"location":"talks/authorization_engine/#simple-small-app","title":"Simple small app","text":"<p>app.sh</p> <pre><code>#!/usr/bin/env bash\nset -o nounset # Treat unset variables as an error\n\nstore_id=$(jq -r .store_id ./output.json)\nmodel_id=$(jq -r .model_id ./output.json)\n\nfunction fga_check() {\n\n  fga query check --store-id $store_id \\\n                  --model-id $model_id \\\n                  user:$1 viewer document:$2 \\\n                  | jq -r '.allowed'\n\n}\n\n# get user name\n\nread -p \"Enter user name: \" user_name\n\n# get document id\n\nwhile true; do\n\n  PS3=\"Select a document: [none = 0] \"\n\n  all_documents=$(ls ./document*)\n  select doc in ${all_documents[@]}\n  do\n      selected=${doc}\n      break;\n  done\n\n  if [ -z $selected ]; then\n    exit;\n\n  else\n    docuemt_id=$(echo $selected | grep -oE [1-9])\n\n    if [ \"$(fga_check $user_name $docuemt_id)\" = \"true\" ]; then\n      echo\n      cat $selected\n      echo\n    else\n      echo\n      echo \"Not Allowed\"\n      echo\n    fi\n  fi\n\ndone\n</code></pre> <p>fga-setup.sh</p> <pre><code>#!/usr/bin/env bash\nset -o nounset # Treat unset variables as an error\n\n\nstore_name=\"demo_fga\"\n\n\nstore_id=$( \\\n  fga store create --name $store_name | jq -r '.store.id' \\\n)\n\nmodel_id=$( \\\n  fga model write --store-id $store_id \\\n                  --file ./model.yaml \\\n                  | jq -r '.authorization_model_id' \\\n)\n\nfga tuple write --store-id $store_id \\\n                --model-id $model_id \\\n                --file ./tuples.yaml\n\n\njson=$( jq -n \\\n              --arg store_id \"$store_id\" --arg model_id \"$model_id\" \\\n              '{ \"store_id\": $store_id, \"model_id\": $model_id }'\n          )\necho $json &gt; output.json\n</code></pre> <p>model.yaml</p> <pre><code>model\n  schema 1.1\n\ntype user\n\ntype document\n   relations\n     define viewer : [user]\n</code></pre> <p>tuples.yaml</p> <pre><code>- user: user:anne\n  relation: viewer\n  object: document:1\n\n- user: user:peter\n  relation: viewer\n  object: document:2\n</code></pre>"},{"location":"talks/authorization_engine/#openfga-test-demo","title":"OpenFGA test demo","text":"<pre><code>name: Model Tests\n\nmodel: |\n  model\n    schema 1.1\n\n  type user\n\n  type org\n    relations\n      define member : [user]\n      define document_viewer : [user]\n\n  type document\n     relations\n       define owner : [org]\n       define viewer : document_viewer from owner\n\ntuples:\n\n  - user: user:anne\n    relation: document_viewer\n    object: org:1\n\n  - user: org:1\n    relation: owner\n    object: document:1\n\n  - user: user:peter\n    relation: document_viewer\n    object: org:2\n\n  - user: org:2\n    relation: owner\n    object: document:2\n\ntests:\n  - name: Test Anne\n    check:\n      - user: user:anne\n        object: document:1\n        assertions:\n          viewer: true\n\n      - user: user:anne\n        object: document:2\n        assertions:\n          viewer: false\n\n      - user: user:anne\n        object: document:3\n        assertions:\n          viewer: false\n\n  - name: Test Peter\n    check:\n      - user: user:peter\n        object: document:1\n        assertions:\n          viewer: false\n\n      - user: user:peter\n        object: document:2\n        assertions:\n          viewer: true\n</code></pre>"},{"location":"talks/hot_plastic_cool_stuff/","title":"Agenda","text":"<p>::: columns</p> <p>:::: column 1. Intro 1. Types of Home 3D Printers 1. Finding Models to Print 1. Designing Your Own 1. Common Problems &amp; Troubleshooting 1. Live Demo \u2013 Let\u2019s print something! 1. Q&amp;A</p> <p>::::</p> <p>:::: column  ::::</p> <p>:::</p>"},{"location":"talks/hot_plastic_cool_stuff/#intro","title":"Intro","text":"<ol> <li>1980s</li> <li>2005 RepRap project by Adrian Bowyer</li> <li>2010 Josef Prusa joined the RepRap project</li> <li>2012 Josef Prusa founded Prusa 3D</li> <li>2020 Bambu Lab founded by DJI engineers</li> <li>2022 Bambu Lab release X1 (coreXY)</li> </ol>"},{"location":"talks/hot_plastic_cool_stuff/#types-of-home-3d-printer","title":"Types of Home 3D printer","text":"<p>::: columns</p> <p>:::: column</p>"},{"location":"talks/hot_plastic_cool_stuff/#fused-deposition-modeling-fdm","title":"Fused Deposition Modeling (FDM)","text":"<ul> <li>Materials: PLA, PETG, TPU, ABS, PC, mixes with carbon fiber and glass fiber.</li> </ul> <p>Pros:</p> <ul> <li>Low cost</li> <li>Easy to use</li> <li>Stronger mechanical parts (not PLA)</li> </ul> <p>Cons:</p> <ul> <li>Lower resolution/detail (not suitable for tiny details)</li> <li>Warping/shrinking</li> </ul> <p>::::</p> <p>:::: column  ::::</p> <p>:::</p>"},{"location":"talks/hot_plastic_cool_stuff/#types-of-home-3d-printer_1","title":"Types of Home 3D printer","text":"<p>::: columns</p> <p>:::: column</p>"},{"location":"talks/hot_plastic_cool_stuff/#resin","title":"Resin","text":"<p>Pros</p> <ul> <li>High resolution and detail</li> </ul> <p>Cons</p> <ul> <li>Messy and toxic</li> <li>Smaller build volume</li> <li>Requires ventilation</li> </ul> <p>::::</p> <p>:::: column  ::::</p> <p>:::</p>"},{"location":"talks/hot_plastic_cool_stuff/#types-of-home-3d-printer_2","title":"Types of Home 3D printer","text":"<p>::: columns</p> <p>:::: column</p>"},{"location":"talks/hot_plastic_cool_stuff/#bed-slinger","title":"Bed Slinger","text":"<p>Pros:</p> <ul> <li>Simple and cost-effective design</li> <li>Easy to understand and maintain</li> <li>Great for beginners</li> </ul> <p>Cons:</p> <ul> <li>Wobble</li> <li>Slower printing speed</li> <li>Take up a lot of space</li> </ul> <p>::::</p> <p>:::: column </p> <p>::::</p> <p>:::</p>"},{"location":"talks/hot_plastic_cool_stuff/#types-of-home-3d-printer_3","title":"Types of Home 3D printer","text":"<p>::: columns</p> <p>:::: column</p>"},{"location":"talks/hot_plastic_cool_stuff/#corexy","title":"CoreXY","text":"<p>Pros:</p> <ul> <li>Very stable at high speeds</li> <li>Compact footprint for the print volume</li> <li>Better quality printing for tall models</li> <li>Comes with enclosure (not all models)</li> </ul> <p>Cons:</p> <ul> <li>High cost</li> <li>More complex mechanics</li> </ul> <p>::::</p> <p>:::: column  ::::</p> <p>:::</p>"},{"location":"talks/hot_plastic_cool_stuff/#types-of-home-3d-printer_4","title":"Types of Home 3D printer","text":"<p>Which Brands?</p> <ul> <li>Prusa</li> <li>Bambu Lab</li> </ul>"},{"location":"talks/hot_plastic_cool_stuff/#finding-models-to-print","title":"Finding Models to Print","text":"<ul> <li>Prusa www.printables.com</li> <li>Bambu Lab makerworld.com</li> <li>Thangs thangs.com</li> <li>*Thingiverse thingiverse.com</li> </ul>"},{"location":"talks/hot_plastic_cool_stuff/#designing-your-own","title":"Designing Your Own","text":"<p>::: columns</p> <p>:::: column</p>"},{"location":"talks/hot_plastic_cool_stuff/#modeling-softwares","title":"Modeling softwares:","text":"<ul> <li>Blender</li> <li>Fusion 360</li> <li>Tinkercad</li> <li>Freecad</li> <li>OpenSCAD</li> </ul> <p>::::</p> <p>:::: column</p>"},{"location":"talks/hot_plastic_cool_stuff/#types","title":"Types:","text":"<ul> <li>Polygonal or mesh</li> <li>Parametric</li> <li>non-parametric</li> </ul> <p>::::</p> <p>:::</p>"},{"location":"talks/hot_plastic_cool_stuff/#common-problems-troubleshooting","title":"Common Problems &amp; Troubleshooting","text":"<p>Even new printers can fail sometimes, you need to be ready for troubleshooting.</p> <p>::: columns</p> <p>:::: column</p>"},{"location":"talks/hot_plastic_cool_stuff/#common-issues","title":"Common issues","text":"<ul> <li>First layer not sticking</li> <li>Warping or curling</li> <li>Stringing or blobs</li> <li>Layer shifts</li> <li>Under-extrusion or clogs</li> </ul> <p>::::</p> <p>:::: column</p>"},{"location":"talks/hot_plastic_cool_stuff/#troubleshooting-tips","title":"Troubleshooting tips","text":"<ul> <li>Wash the bed with dish soap</li> <li>For anything else than PLA, you need enclosure to avoid warping</li> <li>Keep the filament dry</li> <li>Bed leveling and nozzle distance</li> <li>Use of slicer preview to catch issues before printing</li> <li>Trial and error mindset\u2014it's part of the fun</li> </ul> <p>::::</p> <p>:::</p>"},{"location":"talks/hot_plastic_cool_stuff/#where-to-start","title":"Where to start","text":"<p>Slicer Software Tutorials</p> <ul> <li>ItsMeaDMaDe</li> </ul> <p>Functional 3D Printing</p> <ul> <li>MakersMuse</li> <li>slant3d</li> <li>NeedItMakeIt</li> </ul> <p>More about materials</p> <ul> <li>MyTechFun</li> </ul>"}]}